name: pgpx

on:
  workflow_dispatch:
  push:
    tags: [ "v[0-9]+.[0-9]+.[0-9]+" ]

jobs:
  build:
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        os: [ darwin ]
        product: [ pgpx ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Standardize HEAD Reference
      id: head_ref
      run: |
        echo "REF=${{ github.event.pull_request && github.head_ref || github.ref_name }}" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build binary for ${{ matrix.arch }}
      run: |
        GOOS=darwin GOARCH=${{ matrix.arch }} go build -o ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }} ${{ matrix.product }}.go
        sha256sum -b ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }} | awk '{ print $1; }' > ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}.sha256

    - name: Pass ${{ matrix.arch }} binary to release job
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}
        path: ./${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }} 

    - name: Pass ${{ matrix.arch }} SHA256 to release job
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}.sha256
        path: ./${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}.sha256

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Standardize HEAD Reference
      id: head_ref
      run: |
        echo "REF=${{ github.event.pull_request && github.head_ref || github.ref_name }}" >> $GITHUB_ENV

    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ env.REF }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  release_artifacts:
    needs:
      - build
      - create_release
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        os: [ darwin ]
        product: [ pgpx ]
    runs-on: ubuntu-latest

    steps:
    - name: Download ${{ matrix.arch }} binary
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}
        path: ./

    - name: Download ${{ matrix.arch }} SHA256 hash
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}.sha256
        path: ./

    - name: List files
      run: |
        ls -l

    - name: Upload ${{ matrix.arch }} artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream

    - name: Upload ${{ matrix.arch }} artifact SHA256 hash
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}.sha256
        asset_name: ${{ matrix.product }}-${{ matrix.os }}-${{ matrix.arch }}.sha256
        asset_content_type: text/plain
  